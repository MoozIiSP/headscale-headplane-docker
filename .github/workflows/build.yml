name: Build and Push Docker Image

on:
  push:
    tags: [ 'v*' ]

env:
  PRIVATE_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  PRIVATE_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Private Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PRIVATE_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Verify Docker Login
        run: |
          echo "Checking Private Registry login..."
          docker login ${{ env.PRIVATE_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Parse version from tag
        id: version
        run: |
          # 移除 'v' 前缀
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          # 格式应该是 headplane-{version}-headscale-{version}
          # 例如: headplane-1.0.0-headscale-0.22.3
          if [[ $TAG_VERSION =~ ^headplane-([0-9]+\.[0-9]+\.[0-9]+)-headscale-([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            HEADPLANE_VERSION="${BASH_REMATCH[1]}"
            HEADSCALE_VERSION="${BASH_REMATCH[2]}"
            echo "HEADPLANE_VERSION=$HEADPLANE_VERSION" >> $GITHUB_OUTPUT
            echo "HEADSCALE_VERSION=$HEADSCALE_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Error: Tag format should be vheadplane-{version}-headscale-{version}"
            exit 1
          fi

      - name: Make build script executable
        run: chmod +x build.sh

      - name: Build Docker image
        run: ./build.sh ${{ steps.version.outputs.HEADPLANE_VERSION }} ${{ steps.version.outputs.HEADSCALE_VERSION }}

      - name: Push to Private Registry
        run: |
          # 推送到私人仓库，使用版本标签
          docker tag headscale:hp${{ steps.version.outputs.HEADPLANE_VERSION }}-hs${{ steps.version.outputs.HEADSCALE_VERSION }} \
            ${{ env.PRIVATE_REGISTRY }}/${{ env.PRIVATE_IMAGE_NAME }}:hp${{ steps.version.outputs.HEADPLANE_VERSION }}-hs${{ steps.version.outputs.HEADSCALE_VERSION }}
          docker push ${{ env.PRIVATE_REGISTRY }}/${{ env.PRIVATE_IMAGE_NAME }}:hp${{ steps.version.outputs.HEADPLANE_VERSION }}-hs${{ steps.version.outputs.HEADSCALE_VERSION }}
          
          # 同时推送 latest 标签
          docker tag headscale:hp${{ steps.version.outputs.HEADPLANE_VERSION }}-hs${{ steps.version.outputs.HEADSCALE_VERSION }} \
            ${{ env.PRIVATE_REGISTRY }}/${{ env.PRIVATE_IMAGE_NAME }}:latest
          docker push ${{ env.PRIVATE_REGISTRY }}/${{ env.PRIVATE_IMAGE_NAME }}:latest 